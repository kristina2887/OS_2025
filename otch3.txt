g()
Получить идентификатор родительского процесса можно системного вызова  getppid()
Программа ,выводящая на экран идентификаторы текущего и родительского процесса:
include <stdio.h>
#include <sys/types.h>
#include <unistd.h>
#include <stdlib.h>
int main () {
        pid_t procid, parentprocid;
        procid = getpid();
        parentprocid = getppid();
        printf("Ид. текущего процесса: %d\nИд. родительского процесса %d\n", procid, parentprocid);
        return 0;}

balbataeva@alexandr-Aspire-Z5751:~$ ./pr003.out
Ид. текущего процесса: 9093
Ид. родительского процесса 8362

При первом  запуске программы видим id текущего процесса 9093, id родительского процесса - это id командной оболочки bash
balbataeva@alexandr-Aspire-Z5751:~$ ./pr003.out
Ид. текущего процесса: 9140
Ид. родительского процесса 8362

При втором запуске программы видим id текущего процесса поменял свое значение,так как аналогичные предыдущие процессызавершились, а новый  процесс получил новое значение id-9140
id родительского процесса не изменилось ,так как для запуска программы по-прежнему использлвалась командная оболочка bashi
balbataeva@alexandr-Aspire-Z5751:~$ ps
    PID TTY          TIME CMD
   8362 pts/6    00:00:00 bash
   9153 pts/6    00:00:00 ps
balbataeva@alexandr-Aspire-Z5751:~$ vim otch3.txt
